{"file_contents":{"manage.py":{"content":"#!/usr/bin/env python\n\"\"\"Django's command-line utility for administrative tasks.\"\"\"\nimport os\nimport sys\n\n\ndef main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"\n        ) from exc\n    execute_from_command_line(sys.argv)\n\n\nif __name__ == '__main__':\n    main()\n","size_bytes":662},"pyproject.toml":{"content":"[tool.poetry]\nauthors = [\"Your Name <you@example.com>\"]\ndescription = \"\"\nname = \"django-template\"\nversion = \"0.1.0\"\n[tool.poetry.dependencies]\nDjango = \"^5.0\"\npython = \"^3.10\"\ndjango-autoslug = \"^1.9.9\"\npillow = \"^11.3.0\"\n[tool.poetry.dev-dependencies]\n\n[tool.pyright]\n# https://github.com/microsoft/pyright/blob/main/docs/configuration.md\nuseLibraryCodeForTypes = true\nexclude = [\".cache\"]\n\n[tool.ruff]\n# https://beta.ruff.rs/docs/configuration/\nselect = ['E', 'W', 'F', 'I', 'B', 'C4', 'ARG', 'SIM']\nignore = ['W291', 'W292', 'W293']\n\n[build-system]\nrequires = [\"poetry-core>=1.0.0\"]\nbuild-backend = \"poetry.core.masonry.api\"","size_bytes":627},"config/__init__.py":{"content":"","size_bytes":0},"config/asgi.py":{"content":"\"\"\"\nASGI config for config project.\n\nIt exposes the ASGI callable as a module-level variable named ``application``.\n\nFor more information on this file, see\nhttps://docs.djangoproject.com/en/5.0/howto/deployment/asgi/\n\"\"\"\n\nimport os\n\nfrom django.core.asgi import get_asgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')\n\napplication = get_asgi_application()\n","size_bytes":389},"config/settings.py":{"content":"\"\"\"\nDjango settings for config project.\n\nGenerated by 'django-admin startproject' using Django 5.0.2.\n\nFor more information on this file, see\nhttps://docs.djangoproject.com/en/5.0/topics/settings/\n\nFor the full list of settings and their values, see\nhttps://docs.djangoproject.com/en/5.0/ref/settings/\n\"\"\"\n\nfrom pathlib import Path\n\n# Build paths inside the project like this: BASE_DIR / 'subdir'.\nBASE_DIR = Path(__file__).resolve().parent.parent\n\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/\n\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'django-insecure-5!^g6nru+5g16#zxu7@(iql%f5iywwym&gg$)t%0kub4mlcut1'\n\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\n\nALLOWED_HOSTS = [\n    \"32d1bbaa-0224-4675-85f2-6c54fbc13a20-00-2korhhk7x6vhv.kirk.replit.dev\",\n    \"127.0.0.1\",\n    \"localhost\",\n    \"0.0.0.0\",\n]\n\nCSRF_TRUSTED_ORIGINS = [\n    \"https://32d1bbaa-0224-4675-85f2-6c54fbc13a20-00-2korhhk7x6vhv.kirk.replit.dev:3000\",\n]\n\n# Application definition\n\nMEDIA_URL = 'media/'\nMEDIA_ROOT = 'media_files/'\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    \"weblog\",\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'config.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [\n            BASE_DIR / 'templates',\n        ],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n                \"context_processors.global_db.global_pages\",\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'config.wsgi.application'\n\n# Database\n# https://docs.djangoproject.com/en/5.0/ref/settings/#databases\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n\n# Password validation\n# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME':\n        'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME':\n        'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME':\n        'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME':\n        'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\n# Internationalization\n# https://docs.djangoproject.com/en/5.0/topics/i18n/\n\nLANGUAGE_CODE = 'en-us'\n\nTIME_ZONE = 'UTC'\n\nUSE_I18N = True\n\nUSE_TZ = True\n\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\n\nSTATIC_URL = 'static/'\n\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\n\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\n","size_bytes":3662},"config/urls.py":{"content":"\"\"\"\nURL configuration for config project.\n\nThe `urlpatterns` list routes URLs to views. For more information please see:\n    https://docs.djangoproject.com/en/5.0/topics/http/urls/\nExamples:\nFunction views\n    1. Add an import:  from my_app import views\n    2. Add a URL to urlpatterns:  path('', views.home, name='home')\nClass-based views\n    1. Add an import:  from other_app.views import Home\n    2. Add a URL to urlpatterns:  path('', Home.as_view(), name='home')\nIncluding another URLconf\n    1. Import the include() function: from django.urls import include, path\n    2. Add a URL to urlpatterns:  path('blog/', include('blog.urls'))\n\"\"\"\nfrom django.contrib import admin\nfrom django.urls import path\n#\nfrom django.urls import include\nfrom django.conf.urls.static import static\nfrom django.conf import settings\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    #\n    path(\"\", include(\"weblog.urls\", namespace='weblog')),\n    path(\"home/\", include(\"weblog.urls\", namespace='weblog')),\n] + static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)\n","size_bytes":1063},"config/wsgi.py":{"content":"\"\"\"\nWSGI config for config project.\n\nIt exposes the WSGI callable as a module-level variable named ``application``.\n\nFor more information on this file, see\nhttps://docs.djangoproject.com/en/5.0/howto/deployment/wsgi/\n\"\"\"\n\nimport os\n\nfrom django.core.wsgi import get_wsgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')\n\napplication = get_wsgi_application()\n","size_bytes":389},"weblog/__init__.py":{"content":"","size_bytes":0},"weblog/admin.py":{"content":"from django.contrib import admin\nfrom weblog.models import Page\n\n# Register your models here.\n\n\nclass PageAdmin(admin.ModelAdmin):\n  list_display = [\n      'title',\n      'page_slug',\n      'is_active',\n  ]\n\n\nadmin.site.register(Page, PageAdmin)\n","size_bytes":246},"weblog/apps.py":{"content":"from django.apps import AppConfig\n\n\nclass WeblogConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'weblog'\n","size_bytes":144},"weblog/models.py":{"content":"from django.db import models\nfrom autoslug import AutoSlugField\n\n# Create your models here.\n\n\nclass Page(models.Model):\n  title = models.CharField(max_length=100)\n  page_slug = AutoSlugField(populate_from=\"title\")\n  page_bg_img = models.ImageField(upload_to=\"page_bg_img\")\n  page_avatar = models.ImageField(upload_to=\"page_avatar\")\n  content = models.TextField(blank=True, null=True)\n  is_active = models.BooleanField(default=True)\n\n  def __str__(self):\n    return self.title\n","size_bytes":476},"weblog/tests.py":{"content":"from django.test import TestCase\n\n# Create your tests here.\n","size_bytes":60},"weblog/urls.py":{"content":"from django.urls import path\nfrom weblog.views import (home_views, general_views)\nfrom weblog.models import Page\n\n\ndef dynamic_paths():\n    pages = Page.objects.filter(is_active=True)\n    dynamic_urlpatterns = []\n    for page in pages:\n        dynamic_urlpatterns.append(\n            path(f\"{page.page_slug}/\", general_views,\n                 name=f\"{page.page_slug}\"))\n    return dynamic_urlpatterns\n\n\napp_name = 'weblog'\n\nurlpatterns = [\n    path(\"\", home_views, name=\"home\"),\n    *dynamic_paths(),\n]\n","size_bytes":503},"weblog/views.py":{"content":"from django.shortcuts import render, get_object_or_404\nfrom weblog.models import Page\n\n# Create your views here.\n\ndef home_views(request):\n    \"\"\"Ana sayfa view'i\"\"\"\n    title = \"Home\"\n    context = dict(page_title=title, )\n    return render(request, \"pages/home.html\", context)\n\n\ndef register_user_views(request):\n    \"\"\"Kullanıcı kayıt sayfası view'i\"\"\"\n    title = \"User Register\"\n    context = dict(page_title=title, )\n    return render(request, \"pages/register-user.html\", context)\n\n\ndef share_post_views(request):\n    \"\"\"Gönderi paylaşım sayfası view'i\"\"\"\n    title = \"Share Post\"\n    context = dict(page_title=title, )\n    return render(request, \"pages/share-post.html\", context)\n\n\ndef contact_me_views(request):\n    \"\"\"İletişim sayfası view'i\"\"\"\n    title = \"Contact\"\n    context = dict(page_title=title, )\n    return render(request, \"pages/contact.html\", context)\n\n\ndef general_views(request):\n    \"\"\"Dinamik sayfalar için genel view\"\"\"\n    # URL'den slug'ı al\n    path = request.path.strip('/')\n    \n    # Database'den sayfayı bul\n    page = get_object_or_404(Page, page_slug=path, is_active=True)\n    \n    context = {\n        'page_title': page.title,\n        'page': page,\n    }\n    \n    return render(request, \"pages/page-detail.html\", context)","size_bytes":1271},"weblog/migrations/__init__.py":{"content":"","size_bytes":0},"context_processors/global_db.py":{"content":"from weblog.models import Page\n\n\ndef global_pages(request):\n  pages = Page.objects.filter(is_active=True)\n  return dict(pages=pages, )\n","size_bytes":135},"weblog/migrations/0001_initial.py":{"content":"# Generated by Django 5.0.2 on 2025-09-09 23:29\n\nimport autoslug.fields\nfrom django.db import migrations, models\n\n\nclass Migration(migrations.Migration):\n\n    initial = True\n\n    dependencies = [\n    ]\n\n    operations = [\n        migrations.CreateModel(\n            name='Page',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('title', models.CharField(max_length=100)),\n                ('page_slug', autoslug.fields.AutoSlugField(editable=False, populate_from='title')),\n                ('page_bg_img', models.ImageField(upload_to='page_bg_img')),\n                ('page_avatar', models.ImageField(upload_to='page_avatar')),\n                ('content', models.TextField(blank=True, null=True)),\n                ('is_active', models.BooleanField(default=True)),\n            ],\n        ),\n    ]\n","size_bytes":902}},"version":1}